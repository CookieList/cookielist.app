name: Publish CookieList

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      DOTENV_KEY:
        description: "Key to use for.env.vault"
        type: choice
        default: CI
        options:
          - PRODUCTION
          - DEVELOPMENT
          - STAGING
          - CI

      SYNC_DATABASE:
        description: "Sync Database"
        type: boolean
        required: true

      SYNC_STATIC:
        description: "Sync Static"
        type: boolean
        required: true

      SYNC_CODE:
        description: "Sync Code"
        type: boolean
        required: true

      SYNC_ENVIRONMENT:
        description: "Sync Environment"
        type: boolean
        required: true

      SYNC_RELOAD_APP:
        description: "Sync Reload App"
        type: boolean
        required: true

      SYNC_EXTEND_APP:
        description: "Sync Extend App"
        type: boolean
        required: true

  schedule:
    - cron: "0 0 * * *"
    - cron: "0 12 1 1,3,5,7,9,11 *"

  push:
    branches:
      - staging
      - main
    paths:
      - "cookielist/**"
      - ".env.vault"
      - ".github/**"

jobs:
  actions:
    name: Define Synchronization Needs
    runs-on: ubuntu-latest
    outputs:
      SYNC_DATABASE: ${{ steps.SYNC_DATABASE.outputs.action }}
      SYNC_STATIC: ${{ steps.SYNC_STATIC.outputs.action }}
      SYNC_CODE: ${{ steps.SYNC_CODE.outputs.action }}
      SYNC_ENVIRONMENT: ${{ steps.SYNC_ENVIRONMENT.outputs.action }}
      SYNC_RELOAD_APP: ${{ steps.SYNC_RELOAD_APP.outputs.action }}
      SYNC_EXTEND_APP: ${{ steps.SYNC_EXTEND_APP.outputs.action }}
      DOTENV_KEY_NAME: ${{ github.event.inputs.DOTENV_KEY || steps.DOTENV_KEY_NAME.outputs.key }}

    steps:
      - name: Checkout Git
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            code:
              - 'cookielist/**'
            environment:
              - '.env.vault'
            database:
              - 'cookielist/database/**'

      - name: DOTENV_KEY_NAME
        id: DOTENV_KEY_NAME
        run: echo "key=${{ fromJSON('["STAGING", "CI"]')[github.event.ref == 'refs/heads/main'] }}" >> "$GITHUB_OUTPUT"

      - name: SYNC_DATABASE
        id: SYNC_DATABASE
        if: (github.event.inputs.SYNC_DATABASE && github.event_name == 'workflow_dispatch') || (github.event.schedule == '0 0 * * *' || steps.changes.outputs.database == 'true')
        run: echo "action=true" >> "$GITHUB_OUTPUT"

      - name: SYNC_CODE
        id: SYNC_CODE
        if: (github.event.inputs.SYNC_CODE && github.event_name == 'workflow_dispatch') || (steps.changes.outputs.code == 'true')
        run: echo "action=true" >> "$GITHUB_OUTPUT"

      - name: SYNC_STATIC
        id: SYNC_STATIC
        if: (github.event.inputs.SYNC_STATIC && github.event_name == 'workflow_dispatch') || (steps.changes.outputs.code == 'true')
        run: echo "action=true" >> "$GITHUB_OUTPUT"

      - name: SYNC_ENVIRONMENT
        id: SYNC_ENVIRONMENT
        if: (github.event.inputs.SYNC_ENVIRONMENT && github.event_name == 'workflow_dispatch') || (steps.changes.outputs.environment == 'true')
        run: echo "action=true" >> "$GITHUB_OUTPUT"

      - name: SYNC_RELOAD_APP
        id: SYNC_RELOAD_APP
        if: (github.event.inputs.SYNC_RELOAD_APP && github.event_name == 'workflow_dispatch') || (steps.changes.outputs.environment == 'true' || steps.changes.outputs.code == 'true' || github.event.schedule == '0 0 * * *' || steps.changes.outputs.database == 'true')
        run: echo "action=true" >> "$GITHUB_OUTPUT"

      - name: SYNC_EXTEND_APP
        id: SYNC_EXTEND_APP
        if: (github.event.inputs.SYNC_EXTEND_APP && github.event_name == 'workflow_dispatch') || (github.event.schedule == '0 12 1 1,3,5,7,9,11 *')
        run: echo "action=true" >> "$GITHUB_OUTPUT"

  db_setup:
    name: Setup Pre-fetch
    runs-on: ubuntu-latest
    outputs:
      LAST_PRE_FETCH_PAGE: ${{ steps.PRE_FETCH_ESTIMATE.outputs.cookielist__database_last_page_estimate }}
    steps:
      - name: Checkout Git
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt

      - name: Set Pre-fetch estimate
        id: PRE_FETCH_ESTIMATE
        run: python -m cookielist github-action-set-estimate
        env:
          DOTENV_KEY_CI: "${{ secrets.DOTENV_CI }}"
          DOTENV_KEY_STAGING: "${{ secrets.DOTENV_STAGING }}"
          DOTENV_KEY_PRODUCTION: "${{ secrets.DOTENV_PRODUCTION }}"
          DOTENV_KEY_DEVELOPMENT: "${{ secrets.DOTENV_DEVELOPMENT }}"
          DOTENV: ${{ github.event.inputs.DOTENV_KEY || fromJSON('["STAGING", "CI"]')[github.event.ref == 'refs/heads/main'] }}

  database:
    name: Pre-fetch Database
    runs-on: ubuntu-latest
    needs: [db_setup, actions]
    if: needs.actions.outputs.SYNC_DATABASE == 'true'
    strategy:
      matrix:
        database: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - name: Checkout Git
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt

      - name: Pre-fetch Database Portion
        run: python -m cookielist prefetch --group ${{ matrix.database }} --total ${{ needs.db_setup.outputs.LAST_PRE_FETCH_PAGE }}
        env:
          DOTENV_KEY_CI: "${{ secrets.DOTENV_CI }}"
          DOTENV_KEY_STAGING: "${{ secrets.DOTENV_STAGING }}"
          DOTENV_KEY_PRODUCTION: "${{ secrets.DOTENV_PRODUCTION }}"
          DOTENV_KEY_DEVELOPMENT: "${{ secrets.DOTENV_DEVELOPMENT }}"
          DOTENV: ${{ needs.actions.outputs.DOTENV_KEY_NAME || 'STAGING' }}

      - name: Test
        if: always()
        run: |
          sudo apt install tree
          tree -a

      - name: Upload Pre-fetch data
        uses: actions/upload-artifact@v4
        with:
          name: prefetch-${{ matrix.database }}
          if-no-files-found: warn
          retention-days: 1
          compression-level: 9
          path: |
            .cookielist.*/.prefetch/*.json
            .cookielist/.prefetch/*.json

  publish:
    name: Publish To PythonAnywhere
    runs-on: ubuntu-latest
    needs: [database, actions]

    steps:
      - name: Checkout Git
        uses: actions/checkout@v4

      - name: Set Options To Env
        run: |
          {
            echo "SYNC_DATABASE=${{ needs.actions.outputs.SYNC_DATABASE || 'false' }}"
            echo "SYNC_STATIC=${{ needs.actions.outputs.SYNC_STATIC || 'false' }}"
            echo "SYNC_CODE=${{ needs.actions.outputs.SYNC_CODE || 'false' }}"
            echo "SYNC_ENVIRONMENT=${{ needs.actions.outputs.SYNC_ENVIRONMENT || 'false' }}"
            echo "SYNC_RELOAD_APP=${{ needs.actions.outputs.SYNC_RELOAD_APP || 'false' }}"
            echo "SYNC_EXTEND_APP=${{ needs.actions.outputs.SYNC_EXTEND_APP || 'false' }}"
            echo "DOTENV=${{ needs.actions.outputs.DOTENV_KEY_NAME || 'STAGING' }}"
          } >> $GITHUB_ENV

      - name: Restore Cache
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: |
            .cookielist.*/
            .cookielist/
          key: cookielist-cache-${{ hashFiles('.env.vault') }}-${{ hashFiles('cookielist/__version__.py') }}-${{ hashFiles('.cookielist.*/cookielist.db', '.cookielist/cookielist.db') }}
          restore-keys: |
            cookielist-cache-${{ hashFiles('.env.vault') }}-${{ hashFiles('cookielist/__version__.py') }}-
            cookielist-cache-${{ hashFiles('.env.vault') }}-
            cookielist-cache-

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt

      - name: Setup xvfb
        continue-on-error: true
        uses: coactions/setup-xvfb@v1
        with:
          run: |
            sudo apt update
            sudo apt install neofetch
            neofetch

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt
          python -m playwright install --with-deps firefox

      - name: Download Pre-fetch data
        if: needs.actions.outputs.SYNC_DATABASE == 'true'
        uses: actions/download-artifact@v4
        with:
          pattern: prefetch-*
          merge-multiple: true
          path: .prefetch

      - name: Test
        if: always()
        run: |
          sudo apt install tree
          tree -a

      - name: Publish
        run: xvfb-run python -m cookielist synchronize
        env:
          DOTENV_KEY_CI: "${{ secrets.DOTENV_CI }}"
          DOTENV_KEY_STAGING: "${{ secrets.DOTENV_STAGING }}"
          DOTENV_KEY_PRODUCTION: "${{ secrets.DOTENV_PRODUCTION }}"
          DOTENV_KEY_DEVELOPMENT: "${{ secrets.DOTENV_DEVELOPMENT }}"

          SYNC_DATABASE: ${{ env.SYNC_DATABASE }}
          SYNC_STATIC: ${{ env.SYNC_STATIC }}
          SYNC_CODE: ${{ env.SYNC_CODE }}
          SYNC_ENVIRONMENT: ${{ env.SYNC_ENVIRONMENT }}
          SYNC_RELOAD_APP: ${{ env.SYNC_RELOAD_APP }}

          DOTENV: ${{ env.DOTENV }}

      - name: Write Job Summary
        uses: actions/github-script@v7
        if: always()
        env:
          DOTENV: ${{ env.DOTENV }}
          SYNC_DATABASE: ${{ env.SYNC_DATABASE }}
          SYNC_STATIC: ${{ env.SYNC_STATIC }}
          SYNC_CODE: ${{ env.SYNC_CODE }}
          SYNC_ENVIRONMENT: ${{ env.SYNC_ENVIRONMENT }}
          SYNC_RELOAD_APP: ${{ env.SYNC_RELOAD_APP }}
          SYNC_EXTEND_APP: ${{ env.SYNC_EXTEND_APP }}
        with:
          script: |
            core.summary
              .addHeading('CookieList Publish :rocket:')
              .addHeading('${{ env.DOTENV }} (${{ github.event.ref || github.event.schedule }})')
              .addHeading('Sync Options')
              .addTable([
                [{data: 'Sync Option', header: true}, {data: 'Status', header: true}],
                ['SYNC_DATABASE', ${{ env.SYNC_DATABASE }} ? ':shipit:' : ':x:'],
                ['SYNC_STATIC', ${{ env.SYNC_STATIC }} ? ':shipit:' : ':x:'],
                ['SYNC_CODE', ${{ env.SYNC_CODE }} ? ':shipit:' : ':x:'],
                ['SYNC_ENVIRONMENT', ${{ env.SYNC_ENVIRONMENT }} ? ':shipit:' : ':x:'],
                ['SYNC_RELOAD_APP', ${{ env.SYNC_RELOAD_APP }} ? ':shipit:' : ':x:'],
                ['SYNC_EXTEND_APP', ${{ env.SYNC_EXTEND_APP }} ? ':shipit:' : ':x:'],
              ])
              .addHeading('Github Context')
              .addCodeBlock(JSON.stringify(${{ toJson(github) }}, null, '  '), 'json')
              .write()

      - name: Update Cache
        if: success() || failure()
        uses: actions/cache/save@v3
        with:
          path: |
            .cookielist.*/
            .cookielist/
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}

      - name: Create Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: CookieList-${{ hashFiles('.env.vault') }}
          if-no-files-found: warn
          retention-days: 30
          compression-level: 9
          path: |
            ./**
