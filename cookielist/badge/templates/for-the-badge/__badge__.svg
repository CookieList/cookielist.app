{% set margin = _.margin | int %}
{% set badge_height = _.badge_height | int %}
{% set media_icon_size = _.media_icon_size | int %}
{% set avatar_size = _.avatar_size | int if _.show_avatar == 'true' else 0 %}

{% set username = ((_.username_prefix if _.username_prefix != '-null-' else '') + _.anilist_username) | upper %}
{% set username_text_length = approximate_string_width(username, _.font, _.font_size) %}
{% set visible_blocks = [] %}

{% set left_width = (margin * 3) + avatar_size + username_text_length %}

{% if _.show_data_block_anime == 'true' %}
{% set visible_blocks = visible_blocks + [{'name': 'anime', 'count': _.watched_anime_series_count}] %}
{% endif %}

{% if _.show_data_block_manga == 'true' %}
{% set visible_blocks = visible_blocks + [{'name': 'manga', 'count': _.watched_manga_series_count}] %}
{% endif %}

{% if _.show_data_block_music == 'true' %}
{% set visible_blocks = visible_blocks + [{'name': 'music', 'count': _.watched_music_series_count}] %}
{% endif %}

{% if _.show_data_block_novel == 'true' %}
{% set visible_blocks = visible_blocks + [{'name': 'novel', 'count': _.watched_novel_series_count}] %}
{% endif %}

{% set data_block_width = (media_icon_size + approximate_string_width(visible_blocks | map(attribute='count') | max, _.font, _.font_size) + (margin * 3/2)) %}
{% set right_width = ((visible_blocks | length + 1) * margin) + (data_block_width * visible_blocks | length) %}

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 {{ left_width + right_width }} {{ badge_height }}" preserveAspectRatio="none" width="{{ (left_width + right_width) / 2 }}" height="{{ badge_height / 2 }}">
    
    {% tailwind_colors_css %}
    {% font_css %}
    {{ "<style>" }}{% include "for-the-badge/options.css" %}{{ "</style>" }}
    {{ "<style>" }}{% include "for-the-badge/styles.css" %}{{ "</style>" }}

    <defs>
        {% if _.show_data_block_anime == 'true' %}
        <symbol id="media-symbol-anime" viewBox="0 0 24 24" width="{{ media_icon_size }}" height="{{ media_icon_size }}">
            {% if _.solid_media_icon == 'true' %}
            <path class="card-media-icon-path" stroke-width="0" fill-rule="evenodd" d="M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z" clip-rule="evenodd" />
            {% else %}
            <path fill="none" stroke-width="{{ _.media_icon_stroke_width }}" stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 010 1.971l-11.54 6.347a1.125 1.125 0 01-1.667-.985V5.653z" />
            {% endif %}
        </symbol>
        {% endif %}

        {% if _.show_data_block_manga == 'true' %}
        <symbol id="media-symbol-manga" viewBox="0 0 24 24" width="{{ media_icon_size }}" height="{{ media_icon_size }}">
            {% if _.solid_media_icon == 'true' %}
            <path class="card-media-icon-path" stroke-width="0" d="M11.25 4.533A9.707 9.707 0 0 0 6 3a9.735 9.735 0 0 0-3.25.555.75.75 0 0 0-.5.707v14.25a.75.75 0 0 0 1 .707A8.237 8.237 0 0 1 6 18.75c1.995 0 3.823.707 5.25 1.886V4.533ZM12.75 20.636A8.214 8.214 0 0 1 18 18.75c.966 0 1.89.166 2.75.47a.75.75 0 0 0 1-.708V4.262a.75.75 0 0 0-.5-.707A9.735 9.735 0 0 0 18 3a9.707 9.707 0 0 0-5.25 1.533v16.103Z" />
            {% else %}
            <path fill="none" stroke-width="{{ _.media_icon_stroke_width }}" stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
            {% endif %}
        </symbol>
        {% endif %}

        {% if _.show_data_block_music == 'true' %}
        <symbol id="media-symbol-music" viewBox="0 0 24 24" width="{{ media_icon_size }}" height="{{ media_icon_size }}">
            {% if _.solid_media_icon == 'true' %}
            <path class="card-media-icon-path" stroke-width="0" fill-rule="evenodd" d="M19.952 1.651a.75.75 0 0 1 .298.599V16.303a3 3 0 0 1-2.176 2.884l-1.32.377a2.553 2.553 0 1 1-1.403-4.909l2.311-.66a1.5 1.5 0 0 0 1.088-1.442V6.994l-9 2.572v9.737a3 3 0 0 1-2.176 2.884l-1.32.377a2.553 2.553 0 1 1-1.402-4.909l2.31-.66a1.5 1.5 0 0 0 1.088-1.442V5.25a.75.75 0 0 1 .544-.721l10.5-3a.75.75 0 0 1 .658.122Z" clip-rule="evenodd" />
            {% else %}
            <path fill="none" stroke-width="{{ _.media_icon_stroke_width }}" stroke-linecap="round" stroke-linejoin="round" d="M9 9l10.5-3m0 6.553v3.75a2.25 2.25 0 01-1.632 2.163l-1.32.377a1.803 1.803 0 11-.99-3.467l2.31-.66a2.25 2.25 0 001.632-2.163zm0 0V2.25L9 5.25v10.303m0 0v3.75a2.25 2.25 0 01-1.632 2.163l-1.32.377a1.803 1.803 0 01-.99-3.467l2.31-.66A2.25 2.25 0 009 15.553z" />
            {% endif %}
        </symbol>
        {% endif %}

        {% if _.show_data_block_novel == 'true' %}
        <symbol id="media-symbol-novel" viewBox="0 0 24 24" width="{{ media_icon_size }}" height="{{ media_icon_size }}">
            {% if _.solid_media_icon == 'true' %}
            <path class="card-media-icon-path" stroke-width="0" fill-rule="evenodd" d="M6.32 2.577a49.255 49.255 0 0 1 11.36 0c1.497.174 2.57 1.46 2.57 2.93V21a.75.75 0 0 1-1.085.67L12 18.089l-7.165 3.583A.75.75 0 0 1 3.75 21V5.507c0-1.47 1.073-2.756 2.57-2.93Z" clip-rule="evenodd" />
            {% else %}
            <path fill="none" stroke-width="{{ _.media_icon_stroke_width }}" stroke-linecap="round" stroke-linejoin="round" d="M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0z" />
            {% endif %}
        </symbol>
        {% endif %}
    </defs>

    <clipPath id="rounded">
        <rect width="{{ left_width + right_width }}" height="{{ badge_height }}" rx="{{ _.badge_border_radius }}" ry="{{ _.badge_border_radius }}" fill="none" />
    </clipPath>

    <g shape-rendering="crispEdges" clip-path="url(#rounded)">
        <rect width="{{ left_width }}" height="{{ badge_height }}" class="card-left-bg" />
        <rect x="{{ left_width }}" width="{{ right_width }}" height="{{ badge_height }}" class="card-right-bg" />
    </g>

    <g font-family="{{ _.font }}" font-size="{{ _.font_size }}" text-rendering="geometricPrecision">
        {% if _.show_avatar == 'true' %}
        <image x="{{ margin }}" y="{{ (badge_height - avatar_size) / 2 }}" width="{{ avatar_size }}" height="{{ avatar_size }}" xlink:href="{{ _.anilist_avatar_base_64() }}" />
        {% endif %}
        <text x="{{ (margin * 2) + avatar_size }}" y="{{ _.font_top_margin }}" class="font-left">{{ username }}</text>
        
        {% for data in visible_blocks %}
        
        {% set _data_length = approximate_string_width(data.count, _.font, _.font_size) %}
        {% set start_axis = ((data_block_width + margin) * loop.index0) + left_width + margin %}
        {% set block_start_axis = start_axis + ((data_block_width - (_data_length + media_icon_size + (margin / 2))) / 2) - (margin / 2) %}

        <rect x="{{ start_axis }}" y="{{ _.data_block_margin_top }}" height="{{ _.data_block_height }}" rx="{{ _.data_block_border_radius }}" ry="{{ _.data_block_border_radius }}" width="{{ data_block_width }}" class="data-block" />
        <use xlink:href="#media-symbol-{{ data.name }}" class="card-media-icon" x="{{ block_start_axis + (margin / 2) }}" y="{{ (badge_height - media_icon_size) / 2 }}" />
        <text x="{{ block_start_axis + margin + media_icon_size }}" y="{{ _.font_top_margin }}" class="font-right">{{ data.count }}</text>
        
        {% endfor %}
    </g>
</svg>